{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\brkim\\\\frontend\\\\bookstore\\\\src\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport DaumPostcode from \"react-daum-postcode\";\nimport './css/Join.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = props => {\n  _s();\n  const complete = data => {\n    let fullAddress = data.address;\n    let extraAddress = '';\n    if (data.addressType === 'R') {\n      if (data.bname !== '') {\n        extraAddress += data.bname;\n      }\n      if (data.buildingName !== '') {\n        extraAddress += extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName;\n      }\n      fullAddress += extraAddress !== '' ? ` (${extraAddress})` : '';\n    }\n    console.log(data);\n    console.log(fullAddress);\n    console.log(data.zonecode);\n    props.setcompany({\n      ...props.company,\n      address: fullAddress\n    });\n  };\n  const [enroll_company, setEnroll_company] = useState({\n    address: ''\n  });\n  const [popup, setPopup] = useState(false);\n  const handleInput = e => {\n    setEnroll_company({\n      ...enroll_company,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleComplete = data => {\n    setPopup(!popup);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DaumPostcode, {\n      className: \"postmodal\",\n      autoClose: true,\n      onComplete: complete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Post, \"8I5Ly2afbiJ5u6h5s4YYBl4z0mI=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","DaumPostcode","jsxDEV","_jsxDEV","Post","props","_s","complete","data","fullAddress","address","extraAddress","addressType","bname","buildingName","console","log","zonecode","setcompany","company","enroll_company","setEnroll_company","useState","popup","setPopup","handleInput","e","target","name","value","handleComplete","children","className","autoClose","onComplete","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/workspace/brkim/frontend/bookstore/src/Post.js"],"sourcesContent":["import React from 'react';\r\nimport DaumPostcode from \"react-daum-postcode\";\r\nimport './css/Join.css';\r\n \r\nconst Post = (props) => {\r\n\r\n    const complete = (data) =>{\r\n        let fullAddress = data.address;\r\n        let extraAddress = '';\r\n\r\n        if (data.addressType === 'R') {\r\n            if (data.bname !== '') {\r\n                extraAddress += data.bname;\r\n            }\r\n            if (data.buildingName !== '') {\r\n                extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n            }\r\n            fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n        console.log(data)\r\n        console.log(fullAddress)\r\n        console.log(data.zonecode)\r\n\r\n        props.setcompany({\r\n            ...props.company,\r\n            address:fullAddress,\r\n        })\r\n    }\r\n\r\n    const [enroll_company, setEnroll_company] = useState({\r\n        address:'',\r\n    });\r\n    \r\n    const [popup, setPopup] = useState(false);\r\n    \r\n    const handleInput = (e) => {\r\n        setEnroll_company({\r\n            ...enroll_company,\r\n            [e.target.name]:e.target.value,\r\n        })\r\n    }\r\n    \r\n    const handleComplete = (data) => {\r\n        setPopup(!popup);\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <DaumPostcode\r\n                className=\"postmodal\"\r\n                autoClose\r\n                onComplete={complete} />\r\n        </div>\r\n\r\n        \r\n    );\r\n};\r\n\r\nexport default Post;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEpB,MAAMC,QAAQ,GAAIC,IAAI,IAAI;IACtB,IAAIC,WAAW,GAAGD,IAAI,CAACE,OAAO;IAC9B,IAAIC,YAAY,GAAG,EAAE;IAErB,IAAIH,IAAI,CAACI,WAAW,KAAK,GAAG,EAAE;MAC1B,IAAIJ,IAAI,CAACK,KAAK,KAAK,EAAE,EAAE;QACnBF,YAAY,IAAIH,IAAI,CAACK,KAAK;MAC9B;MACA,IAAIL,IAAI,CAACM,YAAY,KAAK,EAAE,EAAE;QAC1BH,YAAY,IAAKA,YAAY,KAAK,EAAE,GAAI,KAAIH,IAAI,CAACM,YAAa,EAAC,GAAGN,IAAI,CAACM,YAAa;MACxF;MACAL,WAAW,IAAKE,YAAY,KAAK,EAAE,GAAI,KAAIA,YAAa,GAAE,GAAG,EAAG;IACpE;IACAI,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;IACjBO,OAAO,CAACC,GAAG,CAACP,WAAW,CAAC;IACxBM,OAAO,CAACC,GAAG,CAACR,IAAI,CAACS,QAAQ,CAAC;IAE1BZ,KAAK,CAACa,UAAU,CAAC;MACb,GAAGb,KAAK,CAACc,OAAO;MAChBT,OAAO,EAACD;IACZ,CAAC,CAAC;EACN,CAAC;EAED,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGC,QAAQ,CAAC;IACjDZ,OAAO,EAAC;EACZ,CAAC,CAAC;EAEF,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGF,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMG,WAAW,GAAIC,CAAC,IAAK;IACvBL,iBAAiB,CAAC;MACd,GAAGD,cAAc;MACjB,CAACM,CAAC,CAACC,MAAM,CAACC,IAAI,GAAEF,CAAC,CAACC,MAAM,CAACE;IAC7B,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,cAAc,GAAItB,IAAI,IAAK;IAC7BgB,QAAQ,CAAC,CAACD,KAAK,CAAC;EACpB,CAAC;EAED,oBACIpB,OAAA;IAAA4B,QAAA,eACI5B,OAAA,CAACF,YAAY;MACT+B,SAAS,EAAC,WAAW;MACrBC,SAAS;MACTC,UAAU,EAAE3B;IAAS;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAId,CAAC;AAAChC,EAAA,CApDIF,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AAsDV,eAAeA,IAAI;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}