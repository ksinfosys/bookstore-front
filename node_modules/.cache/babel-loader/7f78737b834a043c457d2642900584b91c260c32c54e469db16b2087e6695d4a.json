{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\brkim\\\\frontend\\\\bookstore\\\\src\\\\JoinJP.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View, TextInput, Button, Alert } from 'react-native';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst zipcloudURL = 'https://zipcloud.ibsnet.co.jp/api/search';\nconst JoinJP = () => {\n  _s();\n  // 郵便番号を保存しておくstate\n  const [postalCode, setPostalCode] = useState('');\n  const [address, setAddress] = useState('');\n\n  // axiosのGETメソッドを使った住所検索\n  const fetchAddress = async () => {\n    try {\n      const response = await axios.get(`${zipcloudURL}?zipcode=${postalCode}`);\n      const data = response.data;\n      if (!data.results) {\n        return '該当する住所はありませんでした。';\n      }\n      switch (data.status) {\n        case 200:\n          // 今回はテストなので、同じ郵便番号で2件以上存在する場合は除きます\n          return `${data.results[0].address1}${data.results[0].address2}${data.results[0].address3}`;\n        case 400:\n          return data.message;\n        case 500:\n          return data.message;\n      }\n    } catch (error) {\n      return '検索失敗';\n    }\n  };\n\n  // 送信ボタンを押した時に実行される関数\n  async function handlePress() {\n    // 7桁の数字を正規表現で置きます\n    const pattern = /^[0-9]{7}$/;\n    if (pattern.test(postalCode)) {\n      const address = await fetchAddress();\n      setAddress(address);\n    } else {\n      // 想定していない文字列の場合\n      Alert.alert('正しい郵便番号ではありません', 'もう一度入力してください');\n    }\n  }\n\n  // アプリに描画する内容\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      style: styles.description,\n      children: [\"\\u90F5\\u4FBF\\u756A\\u53F7\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\", \"\\n\", \"(\\u30CF\\u30A4\\u30D5\\u30F3\\u306A\\u30577\\u6841)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      value: postalCode,\n      style: styles.inputPostalCode,\n      onChangeText: text => {\n        setPostalCode(text);\n      },\n      maxLength: 7,\n      keyboardType: \"numeric\",\n      placeholder: \"郵便番号\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"\\u9001\\u4FE1\",\n      color: \"#AAAAAA\",\n      onPress: handlePress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), address.length > 0 && /*#__PURE__*/_jsxDEV(View, {\n      style: styles.addressContainer,\n      children: [/*#__PURE__*/_jsxDEV(View, {\n        style: styles.addressLabel,\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          style: styles.addressLabelText,\n          children: \"\\u4F4F\\u6240\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: styles.address,\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          style: styles.addressText,\n          children: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n_s(JoinJP, \"JKqop6DM/Q56OQv+jdtYKmE6O5s=\");\n_c = JoinJP;\nexport default JoinJP;\nvar _c;\n$RefreshReg$(_c, \"JoinJP\");","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","TextInput","Button","Alert","axios","jsxDEV","_jsxDEV","zipcloudURL","JoinJP","_s","postalCode","setPostalCode","address","setAddress","fetchAddress","response","get","data","results","status","address1","address2","address3","message","error","handlePress","pattern","test","alert","style","styles","container","children","description","fileName","_jsxFileName","lineNumber","columnNumber","value","inputPostalCode","onChangeText","text","maxLength","keyboardType","placeholder","title","color","onPress","length","addressContainer","addressLabel","addressLabelText","addressText","_c","$RefreshReg$"],"sources":["C:/workspace/brkim/frontend/bookstore/src/JoinJP.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Button, Alert } from 'react-native';\r\nimport axios from 'axios';\r\n\r\nconst zipcloudURL = 'https://zipcloud.ibsnet.co.jp/api/search';\r\n\r\n\r\nconst JoinJP = () => {\r\n// 郵便番号を保存しておくstate\r\nconst [postalCode, setPostalCode] = useState('');\r\nconst [address, setAddress] = useState('');\r\n\r\n// axiosのGETメソッドを使った住所検索\r\nconst fetchAddress = async () => {\r\n  try {\r\n    const response = await axios.get(`${zipcloudURL}?zipcode=${postalCode}`);\r\n    const data = response.data;\r\n    if ( !data.results ) {\r\n      return '該当する住所はありませんでした。'\r\n    }\r\n    switch (data.status) {\r\n      case 200:\r\n        // 今回はテストなので、同じ郵便番号で2件以上存在する場合は除きます\r\n        return `${data.results[0].address1}${data.results[0].address2}${data.results[0].address3}`;\r\n      case 400:\r\n        return data.message;\r\n      case 500:\r\n        return data.message;\r\n    }\r\n  } catch (error) {\r\n     return '検索失敗';\r\n  }\r\n}\r\n\r\n// 送信ボタンを押した時に実行される関数\r\nasync function handlePress() {\r\n  // 7桁の数字を正規表現で置きます\r\n  const pattern = /^[0-9]{7}$/;\r\n  if (pattern.test(postalCode)){\r\n    const address = await fetchAddress();\r\n    setAddress(address);\r\n  } else {\r\n    // 想定していない文字列の場合\r\n    Alert.alert('正しい郵便番号ではありません', 'もう一度入力してください');\r\n  }\r\n}\r\n\r\n// アプリに描画する内容\r\nreturn (\r\n  <View style={styles.container}>\r\n    <Text style={styles.description}>郵便番号を入力してください{\"\\n\"}(ハイフンなし7桁)</Text>\r\n    <TextInput\r\n      value={postalCode}\r\n      style={styles.inputPostalCode}\r\n      onChangeText={(text) =>{\r\n        setPostalCode(text);\r\n      }}\r\n      maxLength={7}\r\n      keyboardType={\"numeric\"}\r\n      placeholder={\"郵便番号\"}\r\n    />\r\n    <Button\r\n      title=\"送信\"\r\n      color=\"#AAAAAA\"\r\n      onPress={handlePress}\r\n    />\r\n    {address.length > 0 && (\r\n      <View style={styles.addressContainer}>\r\n        <View style={styles.addressLabel}>\r\n          <Text style={styles.addressLabelText}>住所</Text>\r\n        </View>\r\n        <View style={styles.address}>\r\n          <Text style={styles.addressText}>{address}</Text>\r\n        </View>\r\n      </View>\r\n    )}\r\n  </View>\r\n);\r\n}\r\n\r\nexport default JoinJP;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}